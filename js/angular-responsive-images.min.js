/**
 * Angular responsive images
 * @version v0.1.0
 * @link https://github.com/c0bra/angular-responsive-images.git
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */!function(){var a=angular.module("bhResponsiveImages",[]);a.value("presetMediaQueries",{"default":"only screen and (min-width: 1px)",small:"only screen and (min-width: 768px)",medium:"only screen and (min-width: 1280px)",large:"only screen and (min-width: 1440px)",landscape:"only screen and (orientation: landscape)",portrait:"only screen and (orientation: portrait)",retina:"only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)"}),a.directive("bhSrcResponsive",["presetMediaQueries","$timeout",function(a,b){return{restrict:"A",priority:100,link:function(c,d,e){function f(c){l||(b(function(){angular.forEach(k,function(a){a.mql.removeListener(a.listener)}),k=[];var b;angular.forEach(c,function(d){var e=d[0],g=e;a.hasOwnProperty(e)&&(g=a[e]);var h=matchMedia(g);h.matches&&(b=d);var i=function(){f(c)};h.addListener(i),k.push({mql:h,listener:i})}),b?(g(b[1]),h=!0):g(i),l=!1},0),l=!0)}function g(a){d.attr("src",a)}if("function"!=typeof matchMedia)throw"Function 'matchMedia' does not exist";var h=!1,i=e.src;e.$observe("src",function(a,b){a!==b&&a&&!h&&(i=a)});var j,k=[],l=!1;e.$observe("bhSrcResponsive",function(a){var b=c.$eval(a);if(b instanceof Array==!1)throw"Expected evaluate bh-src-responsive to evaluate to an Array, instead got: "+b;f(b),"function"==typeof j&&j()}),c.$on("$destroy",function(){angular.forEach(k,function(a){a.mql.removeListener(a.listener)})})}}}])}();